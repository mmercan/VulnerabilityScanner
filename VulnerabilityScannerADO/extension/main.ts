console.info('OSS vulnerability Scanner powered by https://ossindex.sonatype.org/')


console.info('...1')
import * as tl from 'azure-pipelines-task-lib/task';
console.info('...2')
import { NugetExtract, QueryVulnerabilities, ReportToConsole } from 'vulnerability-scanner';
console.info('...3')

var failifseverityhigher: string | undefined;

async function run() {
    try {
        console.info('OSS vulnerability Scanner... powered by https://ossindex.sonatype.org/')

        const filename: string | undefined = tl.getInput('fileName', true);
        let dir = tl.getVariable("System.DefaultWorkingDirectory");
        if (!dir) { dir = "./" }
        if (!filename) {
            console.error("File not  Found");
        } else {


            let searchFordepsjson: boolean = tl.getBoolInput("searchdepsjsoninprojects", false);

            failifseverityhigher = tl.getInput("failifseverityhigher", false);
            if (!failifseverityhigher) { failifseverityhigher = "None"; }
            let projects: string[] = [];

            const filePath: any = tl.findMatch(dir, filename)[0];

            console.info("Path is " + filePath);

            const tt = new NugetExtract(filePath);
            const query = new QueryVulnerabilities();
            await query.QueryAllPackages(tt.projects);

            ReportToConsole(tt.projects);
            console.info('time', new Date().toTimeString())
        }
    }
    catch (err:any) {
        tl.setResult(tl.TaskResult.Failed, err.message)
    }

}


run();