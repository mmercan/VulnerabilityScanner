trigger:
  branches:
    include:
      - main
  paths:
    include:
      - /devops
      - /src
      - /tests

name: $(BuildDefinitionName).$(DayOfYear)$(Rev:.r)

pool:
  name: Azure Pipelines
  demands: npm

variables:
  AppName: 'VulnerabilityScannerADO'
  newApp: true
  versionMode: 'Patch'


stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    steps:   
      - task: ms-devlabs.vsts-developer-tools-build-tasks.tfx-installer-build-task.TfxInstaller@3
        displayName: 'Use Node CLI for Azure DevOps (tfx-cli): v0.6.x'

      - task: petergroenewegen.PeterGroenewegen-Xpirit-Vsts-Build-InlinePowershell.Xpirit-Vsts-Build-InlinePowershell.InlinePowershell@1
        displayName: 'First Time Extension Version'
        inputs:
          Script: |
            npm install -g typescript
            tsc -v

      - task: Npm@1
        displayName: 'npm install'
        inputs:
          workingDir: '$(AppName)/extension'
          verbose: false


      - task: Npm@1
        displayName: 'npm custom'
        inputs:
          command: custom
          workingDir: '$(AppName)/extension'
          verbose: false
          customCommand: 'run tsc'

      - task: ms-devlabs.vsts-developer-tools-build-tasks.extension-version-build-task.QueryAzureDevOpsExtensionVersion@4
        displayName: '[Patch]Query Extension Version: mrtmrcn.$(AppName)'
        inputs:
          connectedServiceName: 'vsts marketplace'
          publisherId: mrtmrcn
          extensionId: '$(AppName)'
          versionAction: Patch
        continueOnError: true
        condition: and(succeeded(), eq(variables['versionMode'], 'patch'), eq(variables['newApp'], 'false'))

      - task: ms-devlabs.vsts-developer-tools-build-tasks.extension-version-build-task.QueryAzureDevOpsExtensionVersion@4
        displayName: '[Minor]Query Extension Version: mrtmrcn.$(AppName)'
        inputs:
          connectedServiceName: 'vsts marketplace'
          publisherId: mrtmrcn
          extensionId: '$(AppName)'
          versionAction: Minor
        continueOnError: true
        condition: and(succeeded(), eq(variables['versionMode'], 'minor'), eq(variables['newApp'], 'false'))

      - task: ms-devlabs.vsts-developer-tools-build-tasks.extension-version-build-task.QueryAzureDevOpsExtensionVersion@4
        displayName: '[Major]Query Extension Version: mrtmrcn.$(AppName)'
        inputs:
          connectedServiceName: 'vsts marketplace'
          publisherId: mrtmrcn
          extensionId: '$(AppName)'
          versionAction: Major
        continueOnError: true
        condition: and(succeeded(), eq(variables['versionMode'], 'major'), eq(variables['newApp'], 'false'))

      - task: petergroenewegen.PeterGroenewegen-Xpirit-Vsts-Build-InlinePowershell.Xpirit-Vsts-Build-InlinePowershell.InlinePowershell@1
        displayName: 'First Time Extension Version'
        inputs:
          Script: |
            Write-Host "##vso[task.setvariable variable=Extension.Version;]1.0.1"
        condition: and(succeeded(), eq(variables['newApp'], 'true'))

      - task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishAzureDevOpsExtension@3
        displayName: 'Publish Extension'
        inputs:
          connectedServiceName: 'vsts marketplace'
          rootFolder: '$(AppName)'
          extensionVersion: '$(Extension.Version)'
 
